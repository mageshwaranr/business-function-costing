
buildscript {

    repositories {
        mavenLocal()
        //maven { url "http://build-squid.eng.vmware.com/nexus/content/groups/repo" }
        //maven { url "http://build-maven-repo.eng.vmware.com:8081/nexus/content/groups/repo" }
        //maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
    }

    dependencies {
        //classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
        //classpath "gradle.plugin.ua.eshepelyuk.gradle.jaxrsAnalyzer:gradle-jaxrs-analyzer-plugin:0.1.5"
        classpath "com.jcraft:jsch:0.1.53"
    }
}

ext {
    javaLevel = 1.8
    guavaVersion = '19.0'
    xenonVersion = '0.9.4'
    joolVersion = '0.9.11'
    photonModel = '0.4.4'
    jaxRsVersion = '2.0.1'
    eclipseCollectionVersion = '7.1.0'
//test related
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    hamcrestVersion = '1.3'
    wireMockVersion = '2.1.11'
    swaggerVersion = '1.5.9'
}

allprojects {
    group = 'com.tt.demo'
    version = project.hasProperty("buildVersion") ? project.getProperty("buildVersion") : '0.1.0' 

    apply plugin: 'eclipse'
    apply plugin: 'idea'
//    apply plugin: 'pmd'
//    apply plugin: 'findbugs'
//    apply plugin: 'jacoco'
//    apply plugin: 'maven-publish'

    repositories {
        mavenCentral()
        mavenLocal()
//        maven { url "http://build-squid.eng.vmware.com/nexus/content/groups/repo" }
        maven { url "http://build-maven-repo.eng.vmware.com:8081/nexus/content/groups/repo" }
        jcenter()

    }


}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor(300, 'seconds')
}


idea {
    project {
        languageLevel = javaLevel
    }
}
